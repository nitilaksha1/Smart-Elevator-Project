/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package abc;

import java.awt.Color;
import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.net.InetAddress;
import java.util.Stack;

/**
 *
 * @author ThinkPad
 */
public class ele extends javax.swing.JFrame {
int top=-1;
int eleLoc=5,DT=0,UT=0;
int density,p,elsecount=0;
byte[] dt=new byte[10];
byte[] dt1=new byte[10];
byte c[]=new byte[6];
byte capacity[]=new byte[6];

byte flag[]=new byte[6];
Stack<Integer> stack= new Stack<>();
int element;
        public byte b1[]=new byte[10]; //used in else part of start button event(algbuttonevent)
       public void sendfloor()throws Exception{
        byte capaddr1[]=new byte[]{(byte)192,(byte)168,1,33};
        byte capaddr2[]=new byte[]{(byte)192,(byte)168,1,34}; 
        byte[] sendData=new byte[10];
       byte[] capData=new byte[10];
        byte addr[]=new byte[]{(byte)192,(byte)168,1,35};
       byte addr1[]=new byte[]{(byte)192,(byte)168,1,37};
       sendData[0]=(byte)eleLoc;
      capData=c;
       InetAddress IPAddress=InetAddress.getByAddress(addr);
       InetAddress IPAddr1=InetAddress.getByAddress(addr1);
       DatagramSocket clientSket=new DatagramSocket();
       
       DatagramPacket sendpck1=new DatagramPacket(sendData,sendData.length,IPAddr1,5343);
       clientSket.send(sendpck1);
       DatagramPacket sendpck=new DatagramPacket(sendData,sendData.length,IPAddress,9463);
       clientSket.send(sendpck);
       switch(eleLoc){
           case 1:InetAddress a1=InetAddress.getByAddress(capaddr1);
               DatagramPacket sendpk1=new DatagramPacket(capData, capData.length,a1,6789);
               clientSket.send(sendpk1);
               break;
          case 2:InetAddress a2=InetAddress.getByAddress(capaddr2);
               DatagramPacket sendpk2=new DatagramPacket(capData, capData.length,a2,6789);
               clientSket.send(sendpk2);
               break;
          case 3:
               DatagramPacket sendpk3=new DatagramPacket(capData, capData.length,IPAddress,9463);
               clientSket.send(sendpk3);
               break;    
          case 5:
               DatagramPacket sendpk4=new DatagramPacket(capData, capData.length,IPAddr1,5343);
               clientSket.send(sendpk4);
               break;        
       }
       elsecount=0;
       System.out.println("sendfloor:sent data to 3rd flr");
        clientSket.close();

       }
       
       
        public void receiveflr()throws Exception
        {
            System.out.println("inside receiveflr()");
            byte receiveData[]=new byte[1024];
            byte data[]=new byte[10];
            byte crcv[]=new byte[10];
            DatagramSocket sck=new DatagramSocket(6789);//portno in constuctor of reciving socket
            DatagramPacket rcv=new DatagramPacket(receiveData,receiveData.length);
        sck.receive(rcv);
        data=rcv.getData();
        System.out.println("EleLOc="+data[0]);   
        eleLoc=data[0];
        
        if(eleLoc==4)
        {
            DatagramPacket caprcv=new DatagramPacket(crcv,crcv.length);
            sck.receive(rcv);
            capacity=rcv.getData();
          for(int i=1;i<=5;i++)
              System.out.println("capacity="+capacity[i]);
        }
          sck.close();
        }

/**
     * Creates new form ele
     */
    public ele() {
        for(int p=1;p<=5;p++)
            flag[p]=0;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        algBtn = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        input = new javax.swing.JTextField();
        flr1btn = new java.awt.Button();
        flr2btn = new java.awt.Button();
        flr3btn = new java.awt.Button();
        flr5btn = new java.awt.Button();
        delbtn = new java.awt.Button();
        submbtn = new java.awt.Button();
        f5 = new java.awt.Button();
        f4 = new java.awt.Button();
        f3 = new java.awt.Button();
        f2 = new java.awt.Button();
        f1 = new java.awt.Button();
        redSeparator = new javax.swing.JSeparator();

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("current floor is 4");

        algBtn.setText("Start");
        algBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                algBtnActionPerformed(evt);
            }
        });

        input.setText("Enter destination ");

        flr1btn.setLabel("1");
        flr1btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                flr1btnActionPerformed(evt);
            }
        });

        flr2btn.setLabel("2");
        flr2btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                flr2btnActionPerformed(evt);
            }
        });

        flr3btn.setLabel("3");
        flr3btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                flr3btnActionPerformed(evt);
            }
        });

        flr5btn.setLabel("5");
        flr5btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                flr5btnActionPerformed(evt);
            }
        });

        delbtn.setLabel("Delete");
        delbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delbtnActionPerformed(evt);
            }
        });

        submbtn.setLabel("submit");
        submbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(input)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(flr5btn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(flr2btn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(flr1btn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(flr3btn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(submbtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(delbtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(53, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(input, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addComponent(flr1btn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(flr2btn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(flr3btn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(delbtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(flr5btn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(submbtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(34, Short.MAX_VALUE))
        );

        f5.setBackground(new java.awt.Color(255, 0, 0));
        f5.setBackground(java.awt.Color.red);
        f5.setLabel("5");
        f5.setName(""); // NOI18N

        f4.setBackground(java.awt.Color.LIGHT_GRAY);
        f4.setLabel("4");

        f3.setBackground(java.awt.Color.LIGHT_GRAY);
        f3.setLabel("3");
        f3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                f3ActionPerformed(evt);
            }
        });

        f2.setBackground(java.awt.Color.LIGHT_GRAY);
        f2.setLabel("2");

        f1.setBackground(java.awt.Color.LIGHT_GRAY);
        f1.setLabel("1");

        redSeparator.setBackground(java.awt.Color.red);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addComponent(algBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(redSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 172, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(f1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE)
                    .addComponent(f2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(f3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(f4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(f5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(44, 44, 44))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(f5, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(redSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 1, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(f4, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(f3, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(f2, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(f1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(algBtn))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void f3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_f3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_f3ActionPerformed

    private void flr1btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_flr1btnActionPerformed
        // TODO add your handling code here:
        if(flag[1]!=1)
           flag[1] =1;
           input.setText(evt.getActionCommand());
    }//GEN-LAST:event_flr1btnActionPerformed

    private void flr2btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_flr2btnActionPerformed
if(flag[2]!=1)
           flag[2] =1;
        input.setText(evt.getActionCommand());        // TODO add your handling code here:
    }//GEN-LAST:event_flr2btnActionPerformed

    private void flr3btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_flr3btnActionPerformed
if(flag[3]!=1)
           flag[3] =1;
        input.setText(evt.getActionCommand());        // TODO add your handling code here:
    }//GEN-LAST:event_flr3btnActionPerformed

    private void flr5btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_flr5btnActionPerformed
if(flag[5]!=1)
           flag[5] =1;
        input.setText(evt.getActionCommand());        // TODO add your handling code here:
    }//GEN-LAST:event_flr5btnActionPerformed

    private void delbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delbtnActionPerformed
input.setText("");        // TODO add your handling code here:
    }//GEN-LAST:event_delbtnActionPerformed

    private void submbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submbtnActionPerformed
        // TODO add your handling code here:
        
        int count=9;
        if(top!=count)
        {
            top++;
            stack.push(Integer.parseInt(input.getText()));
            input.setText("enter destination");
        }
        else
        {
            input.setText("capacity exceeded");
        }
    }//GEN-LAST:event_submbtnActionPerformed

    private void algBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_algBtnActionPerformed
        // TODO add your handling code here:
       System.out.println("inside if");
        for(int i=1;i<=5;i++)
            c[i]=0;
        density=top+1;
        for(int i=1;i<=5;i++)
        c[i]=capacity[i];
       // clr=redSeparator.getBackground();
       Color curclr=f4.getBackground();

        if(curclr==java.awt.Color.RED)
        {
         //creating obj of server class
            try{
           DatagramSocket elsesck=new DatagramSocket();
           byte[] receiveData=new byte[1024];
           byte[] sendata=new byte[1024];
           
           byte[] ad=new byte[]{(byte)192,(byte)168,1,37};
           byte[] ad1=new byte[]{(byte)192,(byte)168,1,35};

           InetAddress IP=InetAddress.getByAddress(ad);
          InetAddress IP1=InetAddress.getByAddress(ad1);

           DatagramPacket sendData=new DatagramPacket(sendata,sendata.length,IP,1223);
           
           DatagramPacket sendData1=new DatagramPacket(sendata,sendata.length,IP1,1342);

           DatagramPacket elseData=new DatagramPacket(receiveData,receiveData.length);
           elsesck.send(sendData1);
           Thread.sleep(1000);
           
           elsesck.send(sendData);
           System.out.println("before receive");
                      
           byte []receivedata1=new byte[10];
           DatagramPacket elseData1=new DatagramPacket(receivedata1,receivedata1.length);
           
           elsesck.receive(elseData1);
           dt1=elseData1.getData();
           
           byte []temp1=new byte[]{3,4};
           
       System.out.println("elseof3="+dt1[0]+" "+dt1[1]);    
           Thread.sleep(1000);
           
           elsesck.receive(elseData);
           dt=elseData.getData();
           byte []temp=new byte[]{5,4};
           
                  System.out.println("elseof5="+dt[0]+" "+dt[1]);    
           System.out.println("after receive");
           elsesck.close();
           
            if(temp[0]==dt[0] && temp[1]==dt[1])
            {              
                
                
                eleLoc=5;  
               f5.setBackground(java.awt.Color.RED);
               f4.setBackground(java.awt.Color.LIGHT_GRAY);
               f3.setBackground(java.awt.Color.LIGHT_GRAY);
               f2.setBackground(java.awt.Color.LIGHT_GRAY);
               f1.setBackground(java.awt.Color.LIGHT_GRAY);
               sendfloor();
            }
            if(temp1[0]==dt1[0] && temp1[1]==dt1[1])
            {           
                
                System.out.println("inside first if"); 
                eleLoc=3;  
               f3.setBackground(java.awt.Color.RED);
               f4.setBackground(java.awt.Color.LIGHT_GRAY);
               f5.setBackground(java.awt.Color.LIGHT_GRAY);
               f2.setBackground(java.awt.Color.LIGHT_GRAY);
               f1.setBackground(java.awt.Color.LIGHT_GRAY);
               sendfloor(); 
                
            }
         else{
        eleLoc=Integer.parseInt(f4.getActionCommand());
        System.out.println("eleLoc"+eleLoc);
        for(;top!=-1;)
        {   int i=1; 
            element=stack.pop();
            top--;
            while(i!=element)
            {
                i++;
            }
            c[i]++;
        }
        System.out.print(top);
        System.out.print("density="+density);
        UT=0;DT=0;
        for(int j=1;j<=5;j++)
            System.out.print(c[j]+" ");
        for(int k=1;k<=5;k++)
        {
        if(k<eleLoc)
        DT+=c[k];
        else
        UT+=c[k];
        }    
        System.out.println("UT="+UT+" DT="+DT);
        try{
            p=0;    

            client s=new client(flag,c);
                if((s.TAF+UT)<=(s.TBF+DT))
                {
                    System.out.println("up traffic="+(s.TAF+UT)+"down traffic="+(s.TBF+DT));
                    for(int i=(eleLoc-1);i>=1;i--)
                    {
                        if(flag[i]==1)
                        {
                            p=i;break;
                        }   
                    }
                }
                else{
                     System.out.println("up traffic="+(s.TAF+UT)+"down traffic="+(s.TBF+DT));

                if(flag[5]==1){
                    p=5;
                }
                }
        switch(p)
          {
          case 1:f1.setBackground(java.awt.Color.RED);
                    f4.setBackground(java.awt.Color.LIGHT_GRAY);
                    c[1]=0;flag[1]=0;
                    eleLoc=1;
          break;
          case 2:f2.setBackground(java.awt.Color.RED);
                    f4.setBackground(java.awt.Color.LIGHT_GRAY);
                    c[2]=0;flag[2]=0;
                    eleLoc=2;
          break;
          case 3:f3.setBackground(java.awt.Color.RED);
                    f4.setBackground(java.awt.Color.LIGHT_GRAY);
                    c[3]=0;flag[3]=0;
                    eleLoc=3;
          break;
          case 5:f5.setBackground(java.awt.Color.RED);
          f4.setBackground(java.awt.Color.LIGHT_GRAY);
          c[5]=0;flag[5]=0;
          eleLoc=5;
          break;
        } 
        sendfloor();
        }   
        catch(Exception e)
            {
                
            }
        }
            }
           catch(Exception e){}
    }
     
        else
        {
           try{
               DatagramSocket elsesck=new DatagramSocket(1228);
               byte [] emptyData=new byte[10];
               DatagramPacket emptyrec=new DatagramPacket(emptyData,emptyData.length);
               byte [] elseData=new byte[10];
               System.out.println("elsecount="+elsecount);
               switch(eleLoc)
               {
                   case 3:elsecount++;
                   dt[1]++;    
                   elsesck.receive(emptyrec);
                       InetAddress IP=emptyrec.getAddress();
                       int port=emptyrec.getPort();
                       elseData[0]=4;
                       elseData[1]=(byte)elsecount;
                       DatagramPacket elsesend=new DatagramPacket(elseData,elseData.length,IP,port);
                       System.out.println("before send");
                       elsesck.send(elsesend);
                       System.out.println("after send");
                       elsesck.close();
                       break;
                   case 5:elsecount++;
                   dt1[1]++;
                       elsesck.receive(emptyrec);
                       InetAddress IP1=emptyrec.getAddress();
                       int port1=emptyrec.getPort();
                       elseData[0]=4;
                       elseData[1]=(byte)elsecount;
                       DatagramPacket elsesend1=new DatagramPacket(elseData,elseData.length,IP1,port1);
                       System.out.println("before send");
                       elsesck.send(elsesend1);
                       System.out.println("after send");
                       elsesck.close();
                       break;
               }    
               System.out.println("dt[1]="+dt[1]+"dt1[1]"+dt1[1]);
               if((elsecount==4)|(dt1[1]==4)|(dt[1]==4)) 
               {
                  if(dt1[1]==4)dt1[1]=0;
                  if(dt[1]==4)dt[1]=0; 
               }
               
               
               else{
            System.out.println("Density="+(top+1));
                            b1[0]=4;
                            b1[1]=(byte)(top+1);
                            for(int p=0;p<2;p++)
                                System.out.println(b1[p]);
                   
        //how to assign density array to an array that is used to communicate 
            try{
                System.out.println("inside try");
                 server s=new server(b1,flag);
                 System.out.println("After creating instance");
            }
            catch(Exception e){}
               }
               receiveflr();
              switch(eleLoc)
              {
                  case 1:f1.setBackground(new java.awt.Color(255,0,0));
                         f2.setBackground(java.awt.Color.LIGHT_GRAY);
                         f3.setBackground(java.awt.Color.LIGHT_GRAY);
                         f4.setBackground(java.awt.Color.LIGHT_GRAY);
                         f5.setBackground(java.awt.Color.LIGHT_GRAY);
                  break;
                  case 2:f2.setBackground(new java.awt.Color(255,0,0));
                         f1.setBackground(java.awt.Color.LIGHT_GRAY);
                         f3.setBackground(java.awt.Color.LIGHT_GRAY);
                         f4.setBackground(java.awt.Color.LIGHT_GRAY);
                         f5.setBackground(java.awt.Color.LIGHT_GRAY);                         
                  break;
                  case 3:f3.setBackground(new java.awt.Color(255,0,0));
                         f1.setBackground(java.awt.Color.LIGHT_GRAY);
                         f2.setBackground(java.awt.Color.LIGHT_GRAY);
                         f4.setBackground(java.awt.Color.LIGHT_GRAY);
                         f5.setBackground(java.awt.Color.LIGHT_GRAY);
                  break;
                  case 4:f4.setBackground(java.awt.Color.RED);
                         f1.setBackground(java.awt.Color.LIGHT_GRAY);
                         f2.setBackground(java.awt.Color.LIGHT_GRAY);
                         f3.setBackground(java.awt.Color.LIGHT_GRAY);
                         f5.setBackground(java.awt.Color.LIGHT_GRAY);
                   break;
                      case 5:f5.setBackground(java.awt.Color.RED);
                         f1.setBackground(java.awt.Color.LIGHT_GRAY);
                         f2.setBackground(java.awt.Color.LIGHT_GRAY);
                         f3.setBackground(java.awt.Color.LIGHT_GRAY);
                         f4.setBackground(java.awt.Color.LIGHT_GRAY);
                   break;
                      
              }
              
              //s.data=b1;
                //s.sending();
             }
            catch(Exception e)
            {
                
            }
        }       
    }//GEN-LAST:event_algBtnActionPerformed

    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ele.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ele.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ele.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ele.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ele().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton algBtn;
    private java.awt.Button delbtn;
    private java.awt.Button f1;
    private java.awt.Button f2;
    private java.awt.Button f3;
    private java.awt.Button f4;
    private java.awt.Button f5;
    private java.awt.Button flr1btn;
    private java.awt.Button flr2btn;
    private java.awt.Button flr3btn;
    private java.awt.Button flr5btn;
    private javax.swing.JTextField input;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator redSeparator;
    private java.awt.Button submbtn;
    // End of variables declaration//GEN-END:variables
}
